{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Backend-Challenge-Biztrip",
        "termsOfService": "http://swagger.io/terms/"
    },
    "servers": [
        {
            "url": "http://localhost:3000"
        }
    ],
    "paths": {
        "/tools": {
            "get": {
                "summary": "Get tools",
                "parameters": [
                    {
                        "name": "tag",
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GetToolsResponseBody"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create new tool",
                "description": "To create a new tool you need to register in \"api/register\", and get the login token in \"api/login\".",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateToolRequestBody"
                            },
                            "examples": {
                                "hotel": {
                                    "value": {
                                        "title": "hotel",
                                        "link": "https://github.com/typicode/hotel",
                                        "description": "Local app manager. Start apps within your browser, developer tool with local .localhost domain and https out of the box.",
                                        "tags": [
                                            "node",
                                            "organizing",
                                            "webapps",
                                            "domain",
                                            "developer",
                                            "https",
                                            "proxy"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Valid tool and token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateToolResponseBody"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequestWithoutAuthorizationHeader"
                                },
                                "examples": {
                                    "Without Authorization token": {
                                        "value": {
                                            "error": true,
                                            "message": "Authorization token is required"
                                        }
                                    },
                                    "Invalid Authorization token": {
                                        "value": {
                                            "error": true,
                                            "message": "Authorization token invalid"
                                        }
                                    },
                                    "Expired Authorization token": {
                                        "value": {
                                            "error": true,
                                            "message": "Authorization token expired"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Valid token and Invalid tool",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidToolBodyError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tools/{id}": {
            "delete": {
                "summary": "Delete tool with id",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "When id is valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "When id is not valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "when id is 123456789": {
                                        "value": {
                                            "error": true,
                                            "message": "tool with id 123456789 not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "summary": "Register user",
                "description": "",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequestBody"
                            },
                            "examples": {
                                "foobar": {
                                    "value": {
                                        "email": "foobar@gmail.com",
                                        "password": "foobar-password"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "value": {
                                        "message": "User created successfully"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "User has invalid email and password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultipleErrorResponse"
                                },
                                "examples": {

                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User is already registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequestBody"
                            },
                            "examples": {
                                "foobar": {
                                    "value": {
                                        "email": "foobar@gmail.com",
                                        "password": "foobar-password"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "User has invalid email and password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultipleErrorResponse"
                                },
                                "examples": {

                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User is not registered yet",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultipleErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User is already logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Login a user"
            }
        },
        "/api/logout": {
            "delete": {
                "summary": "Logout a user",
                "description": "",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User has been logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "User is not logged in and try to logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultipleErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "UserRequestBody": {
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "CreateToolRequestBody": {
                "type": "object",
                "required": [
                    "title",
                    "link",
                    "description",
                    "tags"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "link": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "example": {
                    "title": "hotel",
                    "link": "https://github.com/typicode/hotel",
                    "description": "Local app manager. Start apps within your browser, developer tool with local .localhost domain and https out of the box.",
                    "tags": [
                        "node",
                        "organizing",
                        "webapps",
                        "domain",
                        "developer",
                        "https",
                        "proxy"
                    ]
                }
            },
            "GetToolsResponseBody": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "link": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "example": [
                    {
                        "title": "beach",
                        "link": "https://github.com/typicode/beach",
                        "description": "The best beach",
                        "tags": [
                            "domain",
                            "vacation",
                            "sun",
                            "beach"
                        ],
                        "id": 1
                    },
                    {
                        "title": "hotel",
                        "link": "https://github.com/typicode/hotel",
                        "description": "Local app manager. Start apps within your browser, developer tool with local .localhost domain and https out of the box.",
                        "tags": [
                            "node",
                            "organizing",
                            "webapps",
                            "domain",
                            "developer",
                            "https",
                            "proxy"
                        ],
                        "id": 2
                    }
                ]
            },
            "CreateToolResponseBody": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "int"
                    },
                    "title": {
                        "type": "string"
                    },
                    "link": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "example": {
                    "title": "hotel",
                    "link": "https://github.com/typicode/hotel",
                    "description": "Local app manager. Start apps within your browser, developer tool with local .localhost domain and https out of the box.",
                    "tags": [
                        "node",
                        "organizing",
                        "webapps",
                        "domain",
                        "developer",
                        "https",
                        "proxy"
                    ],
                    "id": 5
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "MultipleErrorResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "UserLoggedResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    }
                }
            },
            "InvalidToolBodyError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "description": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "link": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "example": {
                    "message": "The given data was invalid.",
                    "errors": {
                        "title": [
                            "The title field is required."
                        ],
                        "description": [
                            "The description field is required."
                        ],
                        "link": [
                            "The link field is required."
                        ],
                        "tags": [
                            "The tags field is required."
                        ]
                    }
                }
            },
            "TitleAlreadyUsedError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "example": {
                    "message": "The given data was invalid.",
                    "errors": {
                        "title": [
                            "The title has already been taken."
                        ]
                    }
                }
            },
            "InvalidTokenError": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "example": {
                    "error": true,
                    "message": "Authorization token invalid"
                }
            },
            "RequestWithoutAuthorizationHeader": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "example": {
                    "error": true,
                    "message": "Authorization header is required"
                }
            }
        }
    }
}